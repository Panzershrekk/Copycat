//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/[Copycat]CrashBash/InputSystem/CopyCatInputSystem.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @CopyCatInputSystem: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @CopyCatInputSystem()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""CopyCatInputSystem"",
    ""maps"": [
        {
            ""name"": ""PogoPandemonium"",
            ""id"": ""8412e89c-e208-44f7-aadc-eb86b59b8bda"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""769092d7-5168-43ec-9f22-684a833a2cd0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UseBonus"",
                    ""type"": ""Button"",
                    ""id"": ""95e0e37d-40a6-4883-8001-b4f9878fc5f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""03f18990-7c4f-463b-9f1f-0aa8405225bb"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""UseBonus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1082bb33-58ae-43ef-99b1-80dafd06ac8b"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UseBonus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""e84c0e4e-38db-4db9-82cf-9ab25f4b9a28"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4afcc594-76ea-4476-a8aa-cc8a15056d08"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7d59412d-6f87-41fe-b0f8-14c7586f1c34"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e94ec071-b51a-4d3a-882b-dfd553b7c81d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""64473a60-bfe6-41e9-8367-64f4b56d513f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0315ec36-36df-41b3-9630-579406540597"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""dc65e539-2eb5-4e82-813f-ee193b609765"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""395ac5f9-c383-447e-9f5a-69b1ab3fbaad"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6f2b9cd3-0592-4682-a22a-e26f51477ce3"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0e6c1778-4cc6-4e14-a4c4-30212ff418d2"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""54ff4147-333a-431d-9220-7fe421c47dc1"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": []
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PogoPandemonium
        m_PogoPandemonium = asset.FindActionMap("PogoPandemonium", throwIfNotFound: true);
        m_PogoPandemonium_Move = m_PogoPandemonium.FindAction("Move", throwIfNotFound: true);
        m_PogoPandemonium_UseBonus = m_PogoPandemonium.FindAction("UseBonus", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PogoPandemonium
    private readonly InputActionMap m_PogoPandemonium;
    private List<IPogoPandemoniumActions> m_PogoPandemoniumActionsCallbackInterfaces = new List<IPogoPandemoniumActions>();
    private readonly InputAction m_PogoPandemonium_Move;
    private readonly InputAction m_PogoPandemonium_UseBonus;
    public struct PogoPandemoniumActions
    {
        private @CopyCatInputSystem m_Wrapper;
        public PogoPandemoniumActions(@CopyCatInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PogoPandemonium_Move;
        public InputAction @UseBonus => m_Wrapper.m_PogoPandemonium_UseBonus;
        public InputActionMap Get() { return m_Wrapper.m_PogoPandemonium; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PogoPandemoniumActions set) { return set.Get(); }
        public void AddCallbacks(IPogoPandemoniumActions instance)
        {
            if (instance == null || m_Wrapper.m_PogoPandemoniumActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PogoPandemoniumActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @UseBonus.started += instance.OnUseBonus;
            @UseBonus.performed += instance.OnUseBonus;
            @UseBonus.canceled += instance.OnUseBonus;
        }

        private void UnregisterCallbacks(IPogoPandemoniumActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @UseBonus.started -= instance.OnUseBonus;
            @UseBonus.performed -= instance.OnUseBonus;
            @UseBonus.canceled -= instance.OnUseBonus;
        }

        public void RemoveCallbacks(IPogoPandemoniumActions instance)
        {
            if (m_Wrapper.m_PogoPandemoniumActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPogoPandemoniumActions instance)
        {
            foreach (var item in m_Wrapper.m_PogoPandemoniumActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PogoPandemoniumActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PogoPandemoniumActions @PogoPandemonium => new PogoPandemoniumActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPogoPandemoniumActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnUseBonus(InputAction.CallbackContext context);
    }
}
